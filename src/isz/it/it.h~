#ifndef ISZ_IT_IT_H
#define ISZ_IT_IT_H

#include <malloc.h>
#include <stddef.h>

struct isz_fail_node_t_;

typedef const char *isz_it_interface_id_t;

struct isz_it_interface_table_entry
{
	isz_it_interface_id_t *id;
	void *interface;
};

struct isz_it_data
{
	const char *type_name;
	struct isz_it_interface_table_entry *interface_table;
	void (*clear)(void *object);
};

struct isz_it
{
	void *object;
	struct sz_it_data *data; 
	size_t attach_count; 
};

void isz_it_attach(struct isz_it *it, struct isz_fail_node_t_ *isz_fail_node);
void isz_it_detach(struct isz_it *it);
size_t isz_it_get_attach_count(const struct isz_it *it);
void *isz_it_get_interface(struct isz_it *it, isz_it_interface_id_t *id);

typedef void (*isz_it_functor_t)(struct isz_it *it, void *data, struct isz_fail_node_t_ *isz_fail_node);

#define ISZ_IT_MEMBER \
struct isz_it isz_it

#define ISZ_IT(object) \
(&(object)->isz_it)	

#define ISZ_IT_GET_OBJECT(it) \
((it)->object)	

#define ISZ_IT_INTERFACE_ID_DECLARE(interface) \
extern isz_it_interface_id_t interface ## _interface_id

#define ISZ_IT_INTERFACE_ID_DEFINE(interface) \
isz_it_interface_id_t interface ## _interface_id = #interface

#define ISZ_IT_INTERFACE_TABLE_BEGIN \
static struct isz_it_interface_table_entry isz_interface_table[] = \
{

#define ISZ_IT_INTERFACE_TABLE_ENTRY(interface) \
{ &interface ## _interface_id, &interface ## _interface_value },

#define ISZ_IT_INTERFACE_TABLE_END(type) \
{ NULL, NULL } \
}; \
\
static struct isz_it_data isz_it_data = { #type, isz_interface_table, NULL }

#define ISZ_IT_INTERFACE_TABLE_WITH_CLEAR_END(type) \
{ NULL, NULL } \
}; \
\
static struct isz_it_data isz_it_data = { #type, isz_interface_table, type ## _clear }

#define ISZ_IT_GET_INTERFACE(it, interface) \
isz_it_get_interface((it), &interface ## _interface_id); \

#define ISZ_OBJECT_GET_INTERFACE(object, interface) \
ISZ_IT_GET_INTERFACE(&(object)->isz_it, interface)

#define ISZ_IT_ATTACH(it, fail) \
isz_it_attach(it, fail)

#define ISZ_OBJECT_ATTACH(object, fail) \
ISZ_IT_ATTACH(&(object)->isz_it, fail)

#define ISZ_IT_DETACH(it) \
isz_it_detach(it)

#define ISZ_OBJECT_DETACH(object) \
ISZ_IT_DETACH(&(object)->isz_it)

#define ISZ_IT_NEW_DECLARE(type) \
struct type *type ## _new(struct isz_fail_node_t_ *isz_fail_node)

#define ISZ_IT_NEW_DEFINE(type) \
struct type *type ## _new(ISZ_FAIL_PARAM) \
{ \
	ISZ_FAIL_NEXT_VAL(NULL); \
\
	struct type *object = malloc(sizeof(struct type)); \
\
	if(!object) \
	{ \
		ISZ_FAIL_SET(isz_fail_malloc_failure()); \
		return NULL; \
	} \
\
	object->isz_it.attach_count = 1; \
	return object; \
}

#define ISZ_IT_INIT(obj) \
do \
{ \
	(obj)->isz_it.object = obj; \
	(obj)->isz_it.data = &isz_it_data; \
} while(0);


#endif /* !ISZ_IT_IT_H */
